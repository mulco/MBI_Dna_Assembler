/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dnaAssembler;

import java.awt.BorderLayout;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JFileChooser;
import javax.swing.JFrame;

import dnaAssembler.algorithm.DeBruijnGraphAlgorithm;
import dnaAssembler.builder.DeBruijnGraphBuilder;
import dnaAssembler.generator.SequenceGenerator;
import dnaAssembler.generator.SubsequencesGenerator;
import dnaAssembler.graph.DeBruijnGraph;
import dnaAssembler.test.JGraphAdapter;

/**
 * 
 * @author Jacek
 */
public class MainJFrame extends javax.swing.JFrame {

	// lista sekwencji
	private List<String> subsequences;
	// graf
	private DeBruijnGraph graph;

	public MainJFrame() {
		initComponents();
		this.setTitle("[MBI] DNA Assembler");

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jFileChooser1 = new javax.swing.JFileChooser();
		jFrame1 = new javax.swing.JFrame();
		jPanel1 = new javax.swing.JPanel();
		textArea = new javax.swing.JScrollPane();
		console = new javax.swing.JTextPane();
		jPanel2 = new javax.swing.JPanel();
		startButton = new javax.swing.JButton();
		jMenuBar1 = new javax.swing.JMenuBar();
		fileMenu = new javax.swing.JMenu();
		readFileMenuItem = new javax.swing.JMenuItem();
		generateMenuItem = new javax.swing.JMenuItem();
		showMenu = new javax.swing.JMenu();
		displayGraphMenuItem = new javax.swing.JMenuItem();

		final javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(
				jFrame1.getContentPane());
		jFrame1.getContentPane().setLayout(jFrame1Layout);
		jFrame1Layout.setHorizontalGroup(jFrame1Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 400,
				Short.MAX_VALUE));
		jFrame1Layout.setVerticalGroup(jFrame1Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 300,
				Short.MAX_VALUE));

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		textArea.setViewportView(console);

		final javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel1Layout
						.createSequentialGroup()
						.addContainerGap()
						.addComponent(textArea,
								javax.swing.GroupLayout.PREFERRED_SIZE, 400,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,
								Short.MAX_VALUE)));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel1Layout
						.createSequentialGroup()
						.addContainerGap()
						.addComponent(textArea,
								javax.swing.GroupLayout.DEFAULT_SIZE, 346,
								Short.MAX_VALUE).addContainerGap()));

		startButton.setText("Start");
		startButton.setEnabled(false);
		startButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(final java.awt.event.ActionEvent evt) {
				startButtonActionPerformed(evt);
			}
		});

		final javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(
				jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel2Layout.createSequentialGroup().addContainerGap()
						.addComponent(startButton)
						.addContainerGap(223, Short.MAX_VALUE)));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel2Layout
						.createSequentialGroup()
						.addContainerGap()
						.addComponent(startButton)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,
								Short.MAX_VALUE)));

		fileMenu.setText("Plik");

		readFileMenuItem.setText("Wczytaj");
		readFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(final java.awt.event.ActionEvent evt) {
				readFileMenuItemActionPerformed(evt);
			}
		});
		fileMenu.add(readFileMenuItem);

		generateMenuItem.setText("Generuj");
		generateMenuItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(final java.awt.event.ActionEvent evt) {
				generateMenuItemActionPerformed(evt);
			}
		});
		fileMenu.add(generateMenuItem);

		jMenuBar1.add(fileMenu);

		showMenu.setText("Wizualizacja");
		showMenu.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(final java.awt.event.ActionEvent evt) {
				showMenuActionPerformed(evt);
			}
		});

		displayGraphMenuItem.setText("Pokaz graf");
		displayGraphMenuItem
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(
							final java.awt.event.ActionEvent evt) {
						displayGraphMenuItemActionPerformed(evt);
					}
				});
		showMenu.add(displayGraphMenuItem);

		jMenuBar1.add(showMenu);

		setJMenuBar(jMenuBar1);

		final javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(jPanel1,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(jPanel2,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE).addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(
														jPanel2,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE)
												.addComponent(
														jPanel1,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE))
								.addContainerGap()));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void readFileMenuItemActionPerformed(
			final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_readFileMenuItemActionPerformed
		String filename = "";

		final int returnedValue = jFileChooser1.showOpenDialog(this);
		if (returnedValue == JFileChooser.APPROVE_OPTION) {
			filename = jFileChooser1.getSelectedFile().getPath();
		}
		if (returnedValue == JFileChooser.CANCEL_OPTION) {
			appendText("[anulowano wczytywanie pliku]");
			return;
		}

		appendText("[wczytanie pliku: " + filename + "]");

		subsequences = new ArrayList<>();

		try {
			final FileInputStream fstream = new FileInputStream(filename);
			try (DataInputStream in = new DataInputStream(fstream)) {
				final BufferedReader br = new BufferedReader(
						new InputStreamReader(in));
				String strLine;

				while ((strLine = br.readLine()) != null) {
					appendText(strLine);
					subsequences.add(strLine);
				}
			}

			startButton.setEnabled(true);

		} catch (final Exception e) {
			System.err.println("Error: " + e.getMessage());
		}

	}// GEN-LAST:event_readFileMenuItemActionPerformed

	private void showMenuActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_showMenuActionPerformed

	}// GEN-LAST:event_showMenuActionPerformed

	private void displayGraphMenuItemActionPerformed(
			final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_displayGraphMenuItemActionPerformed

		if (graph != null) {
			appendText("[wyswietlenie grafu]");
			final JGraphAdapter jGraphAdapter = new JGraphAdapter();
			jGraphAdapter.setGraph(graph);

			final JFrame mainFrame = new JFrame("Graph");
			jGraphAdapter.init();
			mainFrame.add(jGraphAdapter, BorderLayout.CENTER);
			mainFrame.pack();
			mainFrame.setVisible(true);
		} else {
			appendText("[brak grafu]");
		}
	}// GEN-LAST:event_displayGraphMenuItemActionPerformed

	private void generateMenuItemActionPerformed(
			final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_generateMenuItemActionPerformed
		final String sequence = SequenceGenerator.generateSequence(10);
		subsequences = SubsequencesGenerator.generate(sequence, 4);
		appendText("[Wygenerowano: " + sequence + "]");
		startButton.setEnabled(true);
	}// GEN-LAST:event_generateMenuItemActionPerformed

	private void startButtonActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_startButtonActionPerformed
		startButton.setEnabled(false);

		graph = DeBruijnGraphBuilder.build(subsequences);
		final DeBruijnGraphAlgorithm algorithm = new DeBruijnGraphAlgorithm(
				graph);
		final String result = algorithm.assembly();

		appendText("===============================");

		appendText("Vertecies: " + graph.vertexSet());
		appendText("Edges: " + graph.edgeSet());

		appendText("-------------------------------");
		appendText("Result: " + result);
		appendText("===============================");

	}// GEN-LAST:event_startButtonActionPerformed

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(final String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed"
		// desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (final javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (final ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (final InstantiationException ex) {
			java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (final IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (final javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new MainJFrame().setVisible(true);

			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JTextPane console;
	private javax.swing.JMenuItem displayGraphMenuItem;
	private javax.swing.JMenu fileMenu;
	private javax.swing.JMenuItem generateMenuItem;
	private javax.swing.JFileChooser jFileChooser1;
	private javax.swing.JFrame jFrame1;
	private javax.swing.JMenuBar jMenuBar1;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JMenuItem readFileMenuItem;
	private javax.swing.JMenu showMenu;
	private javax.swing.JButton startButton;
	private javax.swing.JScrollPane textArea;

	// End of variables declaration//GEN-END:variables

	private void appendText(final String txt) {
		console.setText(console.getText() + txt + "\n");
	}
}
